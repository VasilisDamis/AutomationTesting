
ip = ' -ip 192.168.1.2'
connType = '-t 0'
offset = 0

def sale(size)
{
    script
    {
        if(offset > size)
            offset = 0
        for(int i= offset; i<size; ++i)
        {
            catchError(stageResult: 'FAILURE')
            {
                max = 98
                random_num = "${Math.abs(1 + new Random().nextInt(max+1))}"
                amount = '-a' + random_num.toString()
                data = ' -out ../AutomationTesting/transData/Data' + i.toString()+ '.txt'
                str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ../AutomationTesting/validation/sale0.txt ' + amount + data
                bat str 
            }
        }
        offset += size
    }
}

def closeBatch(valPath)
{
    script
    {
        catchError(stageResult: 'FAILURE')
        {
            str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ' + valPath
            bat str
        }
    }
}

pipeline {
    agent any

    stages 
    {


        stage('closeBatchStart')
        {
            steps
            {
                        
                closeBatch('../AutomationTesting/validation/closeBatch.txt')
            }
        }

        stage('sale1')
        {
            steps
            {
                sale(2)
            }
            
        }
        
        stage('sale2')
        {
            steps
            {
                sale(4)
            }
            
        }
        stage('sale3')
        {
            steps
            {
                sale(5)
            }
            
        }
  
        stage('closeBatch')
        {
            steps
            {
                closeBatch('../AutomationTesting/validation/closeBatch.txt')
            }
        }
    }
}
