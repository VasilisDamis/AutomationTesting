def sale(iterations)
{
        script
        {
            
            for(int i=0;i<iterations; ++i)
            {
                catchError(stageResult: 'FAILURE')
                {
                    amount = '-a 5'
                    data = ' -out ../AutomationTesting/outData.txt'
                    str = 'python.exe ../AutomationTesting/Main.py -t 0 -ip 192.168.1.2 -vp ../AutomationTesting/validation/sale0.txt ' + amount + data
        
                    bat str 
                }
            }
        }
}

def refund(iterations)
{
        script
        {
            for(int i=0;i<iterations; ++i)
            {
            
                catchError(stageResult: 'FAILURE')
                {
                    data = ' -in ../AutomationTesting/outData.txt'
                    str = 'python.exe ../AutomationTesting/Main.py -t 0 -ip 192.168.1.2 -vp ../AutomationTesting/validation/refund0.txt ' + data
                    bat str
                }
            }
        }
}

def closeBatch(valPath)
{
    script
    {
        catchError(stageResult: 'FAILURE')
        {
            str = 'python.exe ../AutomationTesting/Main.py -t 0 -ip 192.168.1.2 -vp ' + valPath
            bat str
        }
    }
   
}

pipeline {
    agent any
  
    stages 
    {
        stage('closeBatchStart')
        {
            steps
            {
                closeBatch('../AutomationTesting/validation/closeBatch1.txt')
            }
        }
        stage('sales')
        {
            steps
            {
                sale(1)
            }
            
        }
        stage('refunds')
        {
            steps
            {
                refund(1)
            }
            
        }
        stage('closeBatch')
        {
            steps
            {
                closeBatch('../AutomationTesting/validation/closeBatch.txt')
            }
        }
    }
}
