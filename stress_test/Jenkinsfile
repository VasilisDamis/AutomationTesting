
ip = ' -ip 192.168.1.2'
connType = '-t 0'

def preauth(size, offset)
{
    script
    {
        for(int i= offset; i<size; ++i)
        {
            catchError(stageResult: 'FAILURE')
            {
                max = 98
                random_num = "${Math.abs(1 + new Random().nextInt(max+1))}"
                amount = '-a' + random_num.toString()
                data = ' -out ../AutomationTesting/transData/Data' + i.toString()+ '.txt'
                str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ../AutomationTesting/validation/preauth0.txt ' + amount + data + ' -lp ../AutomationTesting/Logs/stress_test/log.txt'
                bat str 
            }
        }
    }
}

def preauthComp(size, offset, valPath)
{
    script
    {
        for(int i= offset; i<size; ++i)
        {
            catchError(stageResult: 'FAILURE')
            {
                data = '-in ../AutomationTesting/transData/Data' + i.toString()+ '.txt'
                str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ' + valPath + data + ' -lp ../AutomationTesting/Logs/stress_test/log.txt'
                bat str
            }
        }
    }

}

def sale(size, offset)
{
    script
    {
        for(int i=offset; i<size; ++i)
        {
            catchError(stageResult: 'FAILURE')
            {
                max = 98
                random_num = "${Math.abs(1 + new Random().nextInt(max+1))}"
                amount = '-a' + random_num.toString()
                data = ' -out ../AutomationTesting/transData/Data' + i.toString()+ '.txt'
                str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ../AutomationTesting/validation/sale0.txt ' + amount + data + ' -lp ../AutomationTesting/Logs/stress_test/log.txt'
                bat str 
            }
        }
    }
}

def refund(size, offset, valPath)
{
    script
    {
        for(int i=offset; i<size; ++i)
        {
            catchError(stageResult: 'FAILURE')
            {
                data = ' -in ../AutomationTesting/transData/Data' + i.toString()+ '.txt'
                str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp '+ valPath + data + ' -lp ../AutomationTesting/Logs/stress_test/log.txt'
                bat str 
            }
        }
    }
}

def closeBatch(valPath)
{
    script
    {
        catchError(stageResult: 'FAILURE')
        {
            str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ' + valPath + ' -lp ../AutomationTesting/Logs/stress_test/log.txt'
            bat str
        }
    }
}

def closeBatchEnd(valPath)
{
    script
    {
        catchError(stageResult: 'FAILURE')
        {
            str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ' + valPath + ' -lp ../AutomationTesting/Logs/stress_test/log.txt' + '-end 1'
            bat str
        }
    }
}

pipeline {
    agent any

    stages 
    {


        stage('closeBatchStart')
        {
            steps
            {
                        
                closeBatch('../AutomationTesting/validation/closeBatch.txt')
            }
        }

        stage('preauth1')
        {
            steps
            {
                preauth(4,0)
            }
            
        }
        
        stage('preauthCompletion1')
        {
            steps
            {
                preauthComp(4,0, '../AutomationTesting/validation/preauthCompletion0.txt ')
            }
        }

        stage('closeBatch1')
        {
            steps
            {
                closeBatch('../AutomationTesting/validation/closeBatch.txt')
            }
        }

        stage('sale')
        {
            steps
            {
                sale(3,0)
            }
        }

        stage('refund')
        {
            steps
            {
                refund(2,0, '../AutomationTesting/validation/refund0.txt ')
            }
        }

        stage('closeBatch2')
        {
            steps
            {
                closeBatch('../AutomationTesting/validation/closeBatch.txt')
            }
        }
        stage('refund2')
        {
            steps
            {
                refund(3,2, '../AutomationTesting/validation/refundError.txt ')
            }
        }
        
        stage('preauth3')
        {
            steps
            {
                preauth(3,0)
            }
            
        }

        stage('preauthCompletion2')
        {
            steps
            {
                preauthComp(1,0, '../AutomationTesting/validation/preauthCompletion0.txt ')
            }
            
        }

        stage('closeBatch3')
        {
            steps
            {
                closeBatch('../AutomationTesting/validation/closeBatch.txt')
            }
        }

        stage('preauthCompletion4')
        {
            steps
            {
                preauthComp(3,1, '../AutomationTesting/validation/preauthCompletionError1.txt ')
            }
            
        }
        
        stage('closeBatchEnd')
        {
            steps
            {
                closeBatchEnd('../AutomationTesting/validation/closeBatch.txt')
            }
        }
    }
}
