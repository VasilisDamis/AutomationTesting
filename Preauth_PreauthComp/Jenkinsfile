def preauth(iterations)
{
        script
        {
            
    
            catchError(stageResult: 'FAILURE')
            {
                for(int i=0;i<iterations; ++i)
                {
                    max = 98
                    random_num = "${Math.abs(1 + new Random().nextInt(max+1))}"
                    amount = '-a' + random_num.toString()
                    data = ' -out ../AutomationTesting/transData/Data' + i.toString()+ '.txt'
                    str = 'python.exe ../AutomationTesting/Main.py -t 0 -ip 192.168.1.2 -vp ../AutomationTesting/validation/preauth0.txt ' + amount + data
                    bat str 
                    
                    data = '-in ../AutomationTesting/transData/Data' + i.toString()+ '.txt'
                    str = 'python.exe ../AutomationTesting/Main.py -t 0 -ip 192.168.1.2 -vp ../AutomationTesting/validation/preauthCompletion0.txt ' + data
                    bat str
                }
            }
        }
}

def closeBatch(valPath)
{
    catchError(stageResult: 'FAILURE')
    {
        script
        {
            str = 'python.exe ../AutomationTesting/Main.py -t 0 -ip 192.168.1.2 -vp ' + valPath
            bat str
        }
    }
   
}

pipeline {
    agent any
  
    stages 
    {
        stage('closeBatchStart')
        {
            steps
            {
                closeBatch('../AutomationTesting/validation/closeBatch1.txt')
            }
        }
        stage('preauth_preauthCompletion')
        {
            steps
            {
                preauth(2)
            }
            
        }
        stage('closeBatch')
        {
            steps
            {
                closeBatch('../AutomationTesting/validation/closeBatch.txt')
            }
        }
    }
}