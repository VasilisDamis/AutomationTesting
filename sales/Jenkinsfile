
ip = ' -ip 192.168.1.2'
connType = '-t 0'

def sale(size)
{
    script
    {
        for(int i=0; i<size; ++i)
        {
            catchError(stageResult: 'FAILURE')
            {
                max = 98
                random_num = "${Math.abs(1 + new Random().nextInt(max+1))}"
                amount = "-a" + random_num.toString()
                data = " -out AutomationTesting/transData/Data" + i.toString()+ ".txt"
                str = "AutomationProject/Main.exe " + connType + ip +" -vp AutomationTesting/validation/sale0.txt " + amount + data
                start str 
            }
        }
    }
}

def closeBatch(valPath)
{
    script
    {
        catchError(stageResult: 'FAILURE')
        {
            str = "AutomationProject/Main.exe " + connType + ip +" -vp " + valPath
            start str
        }
    }
}

pipeline {
    agent any

    stages 
    {


        stage('closeBatchStart')
        {
            steps
            {
                        
                closeBatch('C:\Users\Xrist\OneDrive\Υπολογιστής\AutomationTesting/validation/closeBatch1.txt')
            }
        }

        stage('sale')
        {
            steps
            {
                sale(5)
            }
            
        }

        stage('closeBatch')
        {
            steps
            {
                closeBatch('AutomationTesting/validation/closeBatch.txt')
            }
        }
    }
}
